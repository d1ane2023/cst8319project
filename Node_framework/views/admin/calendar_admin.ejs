<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>Nada Dhyan - Calendar</title>
    <link href="/css/styles.css" rel="stylesheet" />
    <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
        integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="/css/calendar_admin.css" />
</head>
<body id="page-top">
    <section class="bg-light2">
        <nav class="navbar2 navbar-expand-lg">
            <div class="container">
                <a class="NadaDhyan_Title" href="/admin/Users_admin">Nada Dhyan - Admin</a>
                <div class="navbar-collapse">
                    <ul class="navbar-nav ms-auto my-lg-0">
                        <li><a class="menu_bar nav-link me-lg-3" href="/admin/Users_admin">User</a></li>
                        <li><a class="menu_bar nav-link me-lg-3" href="/admin/contact_admin">Inbox</a></li>
                        <li><a class="menu_bar nav-link me-lg-3" href="/admin/Programs_admin">Programs</a></li>
                        <li><a class="menu_bar nav-link me-lg-3" href="/admin/calendar_admin">Calendar</a></li>
                        <li><a class="menu_bar nav-link me-lg-3" href="/admin/gallery_admin">Gallery</a></li>
                        <li><a class="menu_bar nav-link me-lg-3" href="/admin/blog_admin">Blog</a></li>
                        <li><a class="menu_bar nav-link me-lg-3" href="/admin/testimonials_admin">Testimonials</a></li>
                    </ul>
                    <form action="/logout">
                        <button type="submit" class="btn btn-primary">
                            <span>Logout</span>
                        </button>
                    </form>
                </div>
            </div>
        </nav>

        <div class="text-center">
            <h3 class="Heading3">Calendar - Admin</h3>
        </div>

        <div class="container2">
            <div class="left">
                <div class="calendar">
                    <div class="month">
                        <i class="fas fa-angle-left prev"></i>
                        <div class="date">december 2015</div>
                        <i class="fas fa-angle-right next"></i>
                    </div>
                    <div class="weekdays">
                        <div>Sun</div>
                        <div>Mon</div>
                        <div>Tue</div>
                        <div>Wed</div>
                        <div>Thu</div>
                        <div>Fri</div>
                        <div>Sat</div>
                    </div>
                    <div class="days"></div>
                    <div class="goto-today">
                        <div class="goto">
                            <input type="text" placeholder="mm/yyyy" class="date-input" />
                            <button class="goto-btn">Go</button>
                        </div>
                        <button class="today-btn">Today</button>
                    </div>
                </div>
            </div>
            <div class="right">
                <div class="today-date">
                    <div class="event-day">wed</div>
                    <div class="event-date">12th december 2022</div>
                </div>
                <div class="events"></div>
                <div class="add-event-wrapper">
                    <div class="add-event-header">
                        <div class="title">Add Event</div>
                        <i class="fas fa-times close"></i>
                    </div>
                    <div class="add-event-body">
                        <div class="add-event-input">
                            <input type="text" placeholder="Event Name" class="event-name" />
                        </div>
                        <div class="add-event-input">
                            <input type="text" placeholder="Event Time From" class="event-time-from" />
                        </div>
                        <div class="add-event-input">
                            <input type="text" placeholder="Event Time To" class="event-time-to" />
                        </div>
                    </div>
                    <div class="add-event-footer">
                        <button class="add-event-btn">Add Event</button>
                    </div>
                </div>
            </div>
            <button class="add-event">
                <i class="fas fa-plus"></i>
            </button>
        </div>

        <script>
            const calendar = document.querySelector(".calendar"),
                  date = document.querySelector(".date"),
                  daysContainer = document.querySelector(".days"),
                  prev = document.querySelector(".prev"),
                  next = document.querySelector(".next"),
                  todayBtn = document.querySelector(".today-btn"),
                  gotoBtn = document.querySelector(".goto-btn"),
                  dateInput = document.querySelector(".date-input"),
                  eventDay = document.querySelector(".event-day"),
                  eventDate = document.querySelector(".event-date"),
                  eventsContainer = document.querySelector(".events"),
                  addEventBtn = document.querySelector(".add-event"),
                  addEventWrapper = document.querySelector(".add-event-wrapper"),
                  addEventCloseBtn = document.querySelector(".close"),
                  addEventTitle = document.querySelector(".event-name"),
                  addEventFrom = document.querySelector(".event-time-from"),
                  addEventTo = document.querySelector(".event-time-to"),
                  addEventSubmit = document.querySelector(".add-event-btn");

            let today = new Date();
            let activeDay;
            let month = today.getMonth();
            let year = today.getFullYear();

            const months = [
                "January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
            ];

            const eventsArr = [];
            getEvents();

            function initCalendar() {
                const firstDay = new Date(year, month, 1);
                const lastDay = new Date(year, month + 1, 0);
                const prevLastDay = new Date(year, month, 0);
                const prevDays = prevLastDay.getDate();
                const lastDate = lastDay.getDate();
                const day = firstDay.getDay();
                const nextDays = 7 - lastDay.getDay() - 1;

                date.innerHTML = months[month] + " " + year;

                let days = "";

                for (let x = day; x > 0; x--) {
                    days += `<div class="day prev-date">${prevDays - x + 1}</div>`;
                }

                for (let i = 1; i <= lastDate; i++) {
                    let event = false;
                    eventsArr.forEach((eventObj) => {
                        if (eventObj.day === i && eventObj.month === month + 1 && eventObj.year === year) {
                            event = true;
                        }
                    });
                    if (i === new Date().getDate() && year === new Date().getFullYear() && month === new Date().getMonth()) {
                        activeDay = i;
                        getActiveDay(i);
                        updateEvents(i);
                        days += event ? `<div class="day today active event">${i}</div>` : `<div class="day today active">${i}</div>`;
                    } else {
                        days += event ? `<div class="day event">${i}</div>` : `<div class="day">${i}</div>`;
                    }
                }

                for (let j = 1; j <= nextDays; j++) {
                    days += `<div class="day next-date">${j}</div>`;
                }
                daysContainer.innerHTML = days;
                addListner();
            }

            function prevMonth() {
                month--;
                if (month < 0) {
                    month = 11;
                    year--;
                }
                initCalendar();
            }

            function nextMonth() {
                month++;
                if (month > 11) {
                    month = 0;
                    year++;
                }
                initCalendar();
            }

            prev.addEventListener("click", prevMonth);
            next.addEventListener("click", nextMonth);

            initCalendar();

            function addListner() {
                const days = document.querySelectorAll(".day");
                days.forEach((day) => {
                    day.addEventListener("click", (e) => {
                        getActiveDay(e.target.innerHTML);
                        updateEvents(Number(e.target.innerHTML));
                        activeDay = Number(e.target.innerHTML);
                        days.forEach((day) => {
                            day.classList.remove("active");
                        });
                        if (e.target.classList.contains("prev-date")) {
                            prevMonth();
                            setTimeout(() => {
                                const days = document.querySelectorAll(".day");
                                days.forEach((day) => {
                                    if (!day.classList.contains("prev-date") && day.innerHTML === e.target.innerHTML) {
                                        day.classList.add("active");
                                    }
                                });
                            }, 100);
                        } else if (e.target.classList.contains("next-date")) {
                            nextMonth();
                            setTimeout(() => {
                                const days = document.querySelectorAll(".day");
                                days.forEach((day) => {
                                    if (!day.classList.contains("next-date") && day.innerHTML === e.target.innerHTML) {
                                        day.classList.add("active");
                                    }
                                });
                            }, 100);
                        } else {
                            e.target.classList.add("active");
                        }
                    });
                });
            }

            todayBtn.addEventListener("click", () => {
                today = new Date();
                month = today.getMonth();
                year = today.getFullYear();
                initCalendar();
            });

            dateInput.addEventListener("input", (e) => {
                dateInput.value = dateInput.value.replace(/[^0-9/]/g, "");
                if (dateInput.value.length === 2) {
                    dateInput.value += "/";
                }
                if (dateInput.value.length > 7) {
                    dateInput.value = dateInput.value.slice(0, 7);
                }
                if (e.inputType === "deleteContentBackward") {
                    if (dateInput.value.length === 3) {
                        dateInput.value = dateInput.value.slice(0, 2);
                    }
                }
            });

            gotoBtn.addEventListener("click", gotoDate);

            function gotoDate() {
                const dateArr = dateInput.value.split("/");
                if (dateArr.length === 2) {
                    if (dateArr[0] > 0 && dateArr[0] < 13 && dateArr[1].length === 4) {
                        month = dateArr[0] - 1;
                        year = dateArr[1];
                        initCalendar();
                        return;
                    }
                }
                alert("Invalid Date");
            }

            function getActiveDay(date) {
                const day = new Date(year, month, date);
                const dayName = day.toString().split(" ")[0];
                eventDay.innerHTML = dayName;
                eventDate.innerHTML = date + " " + months[month] + " " + year;
            }

            function updateEvents(date) {
                let events = "";
                eventsArr.forEach((event) => {
                    if (date === event.day && month + 1 === event.month && year === event.year) {
                        event.events.forEach((event) => {
                            events += `<div class="event">
                                <div class="title">
                                    <i class="fas fa-circle"></i>
                                    <h3 class="event-title">${event.title}</h3>
                                </div>
                                <div class="event-time">
                                    <span class="event-time">${event.time}</span>
                                </div>
                            </div>`;
                        });
                    }
                });
                if (events === "") {
                    events = `<div class="no-event">
                            <h3>No Events</h3>
                        </div>`;
                }
                eventsContainer.innerHTML = events;
                saveEvents();
            }

            addEventBtn.addEventListener("click", () => {
                addEventWrapper.classList.toggle("active");
            });

            addEventCloseBtn.addEventListener("click", () => {
                addEventWrapper.classList.remove("active");
            });

            document.addEventListener("click", (e) => {
                if (e.target !== addEventBtn && !addEventWrapper.contains(e.target)) {
                    addEventWrapper.classList.remove("active");
                }
            });

            addEventTitle.addEventListener("input", (e) => {
                addEventTitle.value = addEventTitle.value.slice(0, 60);
            });

            addEventFrom.addEventListener("input", (e) => {
                addEventFrom.value = addEventFrom.value.replace(/[^0-9:]/g, "");
                if (addEventFrom.value.length === 2) {
                    addEventFrom.value += ":";
                }
                if (addEventFrom.value.length > 5) {
                    addEventFrom.value = addEventFrom.value.slice(0, 5);
                }
            });

            addEventTo.addEventListener("input", (e) => {
                addEventTo.value = addEventTo.value.replace(/[^0-9:]/g, "");
                if (addEventTo.value.length === 2) {
                    addEventTo.value += ":";
                }
                if (addEventTo.value.length > 5) {
                    addEventTo.value = addEventTo.value.slice(0, 5);
                }
            });

            addEventSubmit.addEventListener("click", () => {
                const eventTitle = addEventTitle.value;
                const eventTimeFrom = addEventFrom.value;
                const eventTimeTo = addEventTo.value;
                if (eventTitle === "" || eventTimeFrom === "" || eventTimeTo === "") {
                    alert("Please fill all the fields");
                    return;
                }

                const timeFromArr = eventTimeFrom.split(":");
                const timeToArr = eventTimeTo.split(":");
                if (
                    timeFromArr.length !== 2 ||
                    timeToArr.length !== 2 ||
                    timeFromArr[0] > 23 ||
                    timeFromArr[1] > 59 ||
                    timeToArr[0] > 23 ||
                    timeToArr[1] > 59
                ) {
                    alert("Invalid Time Format");
                    return;
                }

                const timeFrom = convertTime(eventTimeFrom);
                const timeTo = convertTime(eventTimeTo);

                const newEvent = {
                    title: eventTitle,
                    time: timeFrom + " - " + timeTo,
                    day: activeDay,
                    month: month + 1,
                    year: year
                };

                submitEvent(newEvent);

                let eventAdded = false;
                if (eventsArr.length > 0) {
                    eventsArr.forEach((item) => {
                        if (item.day === activeDay && item.month === month + 1 && item.year === year) {
                            item.events.push(newEvent);
                            eventAdded = true;
                        }
                    });
                }

                if (!eventAdded) {
                    eventsArr.push({
                        day: activeDay,
                        month: month + 1,
                        year: year,
                        events: [newEvent],
                    });
                }

                addEventWrapper.classList.remove("active");
                addEventTitle.value = "";
                addEventFrom.value = "";
                addEventTo.value = "";
                updateEvents(activeDay);

                const activeDayEl = document.querySelector(".day.active");
                if (!activeDayEl.classList.contains("event")) {
                    activeDayEl.classList.add("event");
                }
            });

            eventsContainer.addEventListener("click", (e) => {
                if (e.target.classList.contains("event")) {
                    if (confirm("Are you sure you want to delete this event?")) {
                        const eventTitle = e.target.children[0].children[1].innerHTML;
                        eventsArr.forEach((event) => {
                            if (event.day === activeDay && event.month === month + 1 && event.year === year) {
                                event.events.forEach((item, index) => {
                                    if (item.title === eventTitle) {
                                        event.events.splice(index, 1);
                                    }
                                });
                                if (event.events.length === 0) {
                                    eventsArr.splice(eventsArr.indexOf(event), 1);
                                    const activeDayEl = document.querySelector(".day.active");
                                    if (activeDayEl.classList.contains("event")) {
                                        activeDayEl.classList.remove("event");
                                    }
                                }
                            }
                        });
                        updateEvents(activeDay);
                    }
                }
            });

            function submitEvent(eventData) {
                fetch('/api/events', { // Adjust the endpoint URL as necessary
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(eventData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log("Event submitted successfully:", data);
                    } else {
                        console.error("Error submitting event:", data.message);
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
            }

            function saveEvents() {
                localStorage.setItem("events", JSON.stringify(eventsArr));
            }

            function getEvents() {
                if (localStorage.getItem("events") === null) {
                    return;
                }
                eventsArr.push(...JSON.parse(localStorage.getItem("events")));
            }

            function convertTime(time) {
                let timeArr = time.split(":");
                let timeHour = timeArr[0];
                let timeMin = timeArr[1];
                let timeFormat = timeHour >= 12 ? "PM" : "AM";
                timeHour = timeHour % 12 || 12;
                time = timeHour + ":" + timeMin + " " + timeFormat;
                return time;
            }
        </script>
    </section>
</body>
</html>
